strategy:
  matrix:
    ember_cli_release:
      ember_cli_version: 'latest'
    ember_cli_beta:
      ember_cli_version: 'beta'
    ts_release:
      ts_version: 'latest'
    ts_beta:
      ts_version: 'next'

pool:
  vmImage: 'ubuntu-16.04'

variables:
  CI: true
  ember_cli_version: ''
  ts_version: ''

trigger:
  paths:
    exclude:
      - README.md
      - CHANGELOG.md
      - CODE_OF_CONDUCT.md
steps:
  - task: NodeTool@0
    inputs:
      versionSpec: '8.x'
    displayName: 'Install Node.js'

  - script: |
      npm install -g yarn
    displayName: 'Setup global tools'

  - script: yarn add -D ember-cli@$(ember_cli_version)
    condition: not(eq(variables['ember_cli_version'], ''))
    displayName: 'Testing against specified ember-cli version: $(ember_cli_version)'

  - script: yarn add -D typescript@$(ts_version)
    condition: not(eq(variables['ts_version'], ''))
    displayName: 'Testing against specified TypeScript version: $(ts_version)'

  - script: |
      yarn install
    displayName: 'Build'

  - script: |
      yarn ci:prepare
    displayName: 'Prepare CI environment'

  - script: |
      yarn ci:test:app -r xunit
    displayName: 'Ember App Tests'

  - script: |
      yarn ci:test:node -R xunit -O output=node-tests.xml
    displayName: 'Node Tests'
  - script: |
      echo " --- EMBER TESTS --- " && cat ember-tests.xml && echo " --- NODE TESTS --- " && cat node-tests.xml
    displayName: 'Log test output files'

  - task: PublishTestResults@2
    inputs:
      testResultsFormat: 'jUnit'
      testResultsFiles: '*-tests.xml'
